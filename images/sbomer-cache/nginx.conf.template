worker_processes auto;
error_log /dev/stdout info;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Resources:
    # https://www.nginx.com/blog/nginx-caching-guide/
    # https://help.sonatype.com/repomanager2/installing-and-running/running-behind-a-reverse-proxy

    proxy_cache_path /var/www/cache/orch levels=1:2 keys_zone=orch:10m inactive=1d max_size=512m use_temp_path=off;
    proxy_cache_path /var/www/cache/maven levels=1:2 keys_zone=maven:10m inactive=30d max_size=3g use_temp_path=off;

    access_log /dev/stdout;

    server {
        listen 7070 default_server;
        server_name  _;

        location = /404.html {
        }

        ## Global cache config below

        # Cache entries for one month
        proxy_cache_valid 200 30d;
        # If the request should be buffered before sending to the client
        proxy_buffering on;
        # What requests should we cache
        proxy_cache_methods GET HEAD;
        # Allow for updating cache in background
        proxy_cache_background_update on;
        # Hold other clients until the in-progress request is finished for the particular resource
        proxy_cache_lock on;
        # If expired items should be revalidated using usual headers
        proxy_cache_revalidate on;
        # On specific errors, serve cached content
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        # Set appropriate headers
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        # Add the 'X-Cache-Status' header to the response,
        # so client knows whether it was served from cache or not
        add_header X-Cache-Status $upstream_cache_status;

        location /pnc/orch/ {
            proxy_cache orch;

            proxy_pass https://${PNC_SERVICE_HOST}:443/;
        }

        location /maven/central/ {
            proxy_cache maven;

            proxy_pass https://repo1.maven.org:443/maven2/;
        }

        location /maven/redhat-ga/ {
            proxy_cache maven;
            
            proxy_ssl_name maven.repository.redhat.com;
            proxy_ssl_server_name on;

            proxy_pass https://maven.repository.redhat.com:443/ga/;
        }

        location /maven/indy-static/ {
            proxy_cache maven;

            proxy_pass https://${INDY_REPOSITORY_HOST}/api/content/maven/group/static/;
            
        }
    }
}
